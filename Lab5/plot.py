import matplotlib.pyplot as plt
import numpy as np

idx = []
for i in range(2, 11) : idx.append(i)

idx0 = []
for i in range(5, 31) : idx0.append(i)

idx1 = []
for i in range(1, 101) : idx1.append(i)

fid_c_4 = [38.086, 36.395, 36.638, 37.961, 39.077, 39.706, 39.087, 40.146, 41.425]
fid_l_4 = [38.086, 37.189, 37.505, 38.610, 38.663, 39.191, 39.624, 39.911, 40.149]
fid_s_4 = [36.086, 36.333, 36.578, 37.696, 37.937, 38.469, 39.828, 39.841, 40.201]

fid_c_7 = [28.469 ,  28.6045 ,  28.971 ,  28.973 ,  29.247 ,  28.572 ,  28.718 ,  29.289 ,  28.915]
fid_l_7 = [28.469 ,  28.82 ,  28.272 ,  28.366 ,  29.1 ,  28.574 ,  28.676 ,  28.305 ,  28.599]
fid_s_7 = [28.469 ,  28.669 ,  28.8 ,  29.02 ,  28.797 ,  28.26 ,  28.789 ,  28.095 ,  29.273]

fid_c_875 = [38.388 ,  38.733 ,  38.805 ,  39.187 ,  39.78 ,  40.648 ,  41.244 ,  41.285 ,  41.502]
fid_l_875 = [38.388 ,  38.54 ,  40.029 ,  40.473 ,  41.708 ,  41.144 ,  41.76 ,  41.97 ,  41.725]
fid_s_875 = [38.388 ,  38.801 ,  38.867 ,  39.624 ,  40.301 ,  39.536 ,  40.583 ,  41.098 ,  42.282]

fid_c_849 = [38.38 ,  38.078 ,  38.833 ,  39.036 ,  39.792 ,  40.936 ,  41.373 ,  41.337 ,  41.605]
fid_l_849 = [38.38 ,  39.375 ,  39.98 ,  39.644 ,  41.229 ,  41.914 ,  41.771 ,  40.684 ,  41.304]
fid_s_849 = [38.38 ,  38.67 ,  38.977 ,  39.253 ,  39.993 ,  40.917 ,  40.209 ,  42.342 ,  41.959]

fid_diff_T_c_4 = [37.091 ,  36.961 ,  36.814 ,  36.702 ,  36.335 ,  36.157 ,  
36.019 ,  36.214 ,  36.203 ,  36.189 ,  36.197 ,  36.146 ,  36.206 ,  36.111 ,  36.112 ,  36.13 ,  
36.264 ,  36.086 ,  36.185 ,  36.06 ,  36.123 ,  36.213 ,  36.071 ,  36.193 ,  36.134 ,  36.095 ]

fid_diff_T_l_4 = [37.56 ,  37.433 ,  37.666 ,  37.307 ,  37.19 ,  37.538 ,  
37.21 ,  36.819 ,  37.265 ,  37.165 ,  36.88 ,  37.519 ,  36.773 ,  36.864 ,  36.419 ,  36.929 ,  
36.721 ,  37.379 ,  37.032 ,  36.6 ,  36.872 ,  37.057 ,  37.045 ,  36.128 ,  36.842 ,  36.584 ]

fid_diff_T_s_4 = [36.535 ,  36.697 ,  36.414 ,  36.382 ,  36.146 ,  36.326 ,  
36.142 ,  36.205 ,  36.107 ,  36.169 ,  36.17 ,  36.253 ,  36.077 ,  36.149 ,  36.131 ,  36.251 ,  
36.023 ,  36.035 ,  36.088 ,  36.173 ,  36.119 ,  36.094 ,  36.196 ,  36.122 ,  36.107 ,  36.027]

fid_diff_T_c_7 = [28.789 ,  28.626 ,  28.573 ,  28.474 ,  28.554 ,  28.513 ,  
28.715 ,  28.483 ,  28.655 ,  28.924 ,  28.701 ,  28.755 ,  28.664 ,  28.51 ,  28.726 ,  28.602 ,  
28.686 ,  28.638 ,  28.678 ,  28.646 ,  28.649 ,  28.633 ,  28.751 ,  28.726 ,  28.58 ,  28.639]

fid_diff_T_s_7 = [28.52 ,  29.018 ,  28.688 ,  28.76 ,  29.103 ,  28.791 ,  
28.747 ,  28.497 ,  28.509 ,  28.647 ,  28.592 ,  28.636 ,  28.645 ,  28.662 ,  28.462 ,  28.634 ,  
28.685 ,  28.671 ,  28.656 ,  28.631 ,  28.699 ,  28.6 ,  28.579 ,  28.714 ,  28.627 ,  28.695]

train_loss_wo_sheduler = [1.3328 ,  1.26263 ,  1.26674 ,  1.15873 ,  1.14836 ,  1.13725 ,  1.13871 ,  1.18929 ,  1.19161 ,  1.08796 ,  
1.1153 ,  1.10855 ,  1.11888 ,  1.12141 ,  1.12724 ,  1.10858 ,  1.18859 ,  1.0716 ,  1.08464 ,  1.07166 ,  
1.09238 ,  1.10271 ,  1.11637 ,  1.11827 ,  1.02906 ,  1.09561 ,  1.08371 ,  1.08498 ,  1.08077 ,  1.05407 ,  
1.06865 ,  1.07121 ,  1.03777 ,  1.03283 ,  1.01494 ,  1.06645 ,  1.08291 ,  1.05288 ,  1.10676 ,  1.09289 ,  
1.0471 ,  1.00989 ,  1.04064 ,  1.09877 ,  0.99359 ,  1.05315 ,  1.04831 ,  0.94605 ,  1.01777 ,  1.01116 ,  
0.98812 ,  0.99384 ,  1.02783 ,  1.05591 ,  1.05619 ,  0.9663 ,  0.97758 ,  0.98536 ,  0.95772 ,  0.97288 ,  
1.01373 ,  1.02414 ,  0.97237 ,  0.93917 ,  0.95458 ,  0.994 ,  0.93184 ,  0.93151 ,  0.90501 ,  0.91665 ,  
0.91776 ,  0.9395 ,  0.95834 ,  0.93975 ,  0.92436 ,  0.8733 ,  0.94164 ,  0.92078 ,  0.90651 ,  0.96057 ,  
0.87658 ,  0.9104 ,  0.88607 ,  0.8871 ,  0.87709 ,  0.81133 ,  0.89129 ,  0.86792 ,  0.91046 ,  0.81226 ,  
0.86706 ,  0.83511 ,  0.8778 ,  0.84485 ,  0.83348 ,  0.82775 ,  0.85079 ,  0.81622 ,  0.83069 ,  0.78336 ]

valid_loss_wo_sheduler = [1.20173 ,  1.18348 ,  1.18028 ,  1.12339 ,  1.02915 ,  1.15821 ,  1.09513 ,  1.17027 ,  1.13214 ,  1.1727 ,  
1.17455 ,  1.16127 ,  1.11301 ,  1.01826 ,  1.19044 ,  1.12791 ,  1.04381 ,  1.03931 ,  1.10211 ,  0.98315 ,  
1.22233 ,  1.10103 ,  1.13545 ,  1.04775 ,  1.17919 ,  1.03202 ,  1.10182 ,  1.06424 ,  1.15961 ,  1.09341 ,  
1.10856 ,  1.15942 ,  1.0945 ,  1.02977 ,  1.09167 ,  1.09306 ,  1.09179 ,  0.97284 ,  1.07547 ,  1.11434 ,  
1.09322 ,  1.00259 ,  1.03838 ,  1.04773 ,  1.03327 ,  1.06017 ,  0.97499 ,  1.05231 ,  1.1359 ,  1.05322 ,  
1.07627 ,  1.00068 ,  1.06222 ,  1.07578 ,  1.08332 ,  1.06277 ,  1.05287 ,  1.06141 ,  1.057 ,  1.06001 ,  
1.06553 ,  1.03275 ,  1.04547 ,  1.09749 ,  0.98289 ,  1.00314 ,  1.08707 ,  1.05897 ,  1.04799 ,  0.97768 ,  
0.99506 ,  1.07446 ,  1.00468 ,  0.94451 ,  1.03878 ,  1.028 ,  1.19056 ,  1.04918 ,  1.02227 ,  1.16424 ,  
0.95273 ,  1.09653 ,  0.97681 ,  1.01061 ,  1.11415 ,  1.02916 ,  1.01583 ,  1.00837 ,  0.97586 ,  0.9214 ,  
0.99745 ,  0.93201 ,  1.00834 ,  0.97661 ,  1.02974 ,  1.05248 ,  0.95024 ,  0.98803 ,  1.07264 ,  1.01398]

train_loss_w_sheduler = [1.19427 ,  1.09728 ,  1.07839 ,  1.06797 ,  1.03474 ,  1.09679 ,  1.05621 ,  1.05821 ,  1.03512 ,  1.10637 ,  
0.9955 ,  1.02917 ,  1.12059 ,  0.99488 ,  1.04288 ,  1.03717 ,  0.97069 ,  0.97148 ,  1.02291 ,  1.03729 ,  
1.06821 ,  1.01572 ,  1.00725 ,  0.99053 ,  1.03104 ,  1.02991 ,  1.06837 ,  1.03493 ,  1.00997 ,  1.03954 ,  
1.04488 ,  1.01864 ,  1.04178 ,  1.00371 ,  1.03706 ,  1.021 ,  1.022 ,  1.00786 ,  1.01131 ,  0.9575 ,  
1.06345 ,  0.9632 ,  1.02356 ,  1.08945 ,  0.99494 ,  1.0189 ,  0.98684 ,  1.01934 ,  0.97971 ,  1.03629 ,  
0.98799 ,  1.05152 ,  1.01822 ,  0.98699 ,  0.98852 ,  0.98815 ,  1.00261 ,  1.00285 ,  0.97741 ,  1.04003 ,  
1.03622 ,  0.98391 ,  1.09176 ,  1.00271 ,  1.01853 ,  1.07021 ,  0.99407 ,  0.97405 ,  0.98328 ,  0.99435 ,  
1.04965 ,  1.04448 ,  1.03161 ,  1.03961 ,  1.01485 ,  0.98239 ,  0.9997 ,  1.03394 ,  1.03749 ,  1.01058 ,  
1.00547 ,  1.03159 ,  1.05124 ,  1.05069 ,  1.03192 ,  0.99517 ,  0.98194 ,  1.00861 ,  1.01056 ,  1.01577 ,  
1.00486 ,  0.98274 ,  0.98865 ,  0.99627 ,  0.9827 ,  1.04876 ,  1.01885 ,  1.0283 ,  1.02806 ,  1.02679]

valid_loss_w_sheduler = [1.19633 ,  1.02363 ,  1.10176 ,  1.04855 ,  1.12924 ,  1.1138 ,  1.10211 ,  0.93392 ,  1.01118 ,  1.10378 ,  
1.05123 ,  1.03953 ,  1.01842 ,  1.09606 ,  0.94789 ,  0.99314 ,  0.96489 ,  1.0076 ,  1.03357 ,  1.12336 ,  
0.95324 ,  1.02078 ,  1.07983 ,  1.05715 ,  1.07063 ,  0.9631 ,  1.05711 ,  1.02235 ,  1.00238 ,  0.99832 ,  
0.98816 ,  1.0052 ,  1.01854 ,  0.94521 ,  1.02283 ,  0.96152 ,  1.09794 ,  1.03945 ,  1.07265 ,  0.99296 ,  
1.0054 ,  1.04058 ,  1.00986 ,  1.06991 ,  1.03905 ,  1.01374 ,  1.10018 ,  0.93228 ,  0.89296 ,  1.06058 ,  
1.15151 ,  0.95498 ,  0.97242 ,  0.98924 ,  1.09598 ,  1.05413 ,  1.11545 ,  0.93188 ,  1.07716 ,  0.99297 ,  
0.94068 ,  0.99398 ,  1.03587 ,  1.03654 ,  1.03897 ,  0.96233 ,  1.11538 ,  1.0682 ,  1.01193 ,  0.98338 ,  
0.96777 ,  0.93253 ,  0.96594 ,  1.10656 ,  0.89132 ,  0.96993 ,  1.04549 ,  0.96174 ,  1.16946 ,  1.01997 ,  
1.01459 ,  1.10553 ,  1.07652 ,  1.02344 ,  1.05122 ,  1.05586 ,  0.92667 ,  1.01465 ,  1.01958 ,  0.95978 ,  
0.9751 ,  0.96963 ,  0.96113 ,  0.9784 ,  0.91982 ,  0.93727 ,  0.99943 ,  1.16178 ,  1.04185 ,  1.01012]

# x = [[[[1],[1]],[[1],[1]],[[1],[1]]],
#      [[[1],[1]],[[1],[1]],[[1],[1]]],
#      [[[1],[1]],[[1],[1]],[[1],[1]]],
#      [[[1],[1]],[[1],[1]],[[1],[1]]]]


if __name__ == "__main__" : 

    # x = np.array(x)
    # print(x.shape)
    # x.transpose(1, 2)
    # print(x.shape)

    plt.figure(figsize=(6,5))
    plt.plot(idx0, fid_diff_T_c_4, label = 'ms 1')    
    plt.plot(idx0, fid_diff_T_c_7, label = 'ms 2')
    plt.plot(idx0, fid_diff_T_s_4, label = 'ms 3', color = 'red')    
    plt.plot(idx0, fid_diff_T_s_7, label = 'ms 4', color = 'green')
    # plt.plot(idx, fid_s_7, label = 'ms 3', color = 'red')
    plt.legend(['Cosine & With Seheduler', 'Cosine & W/O Seheduler', 'Square & With Seheduler', 'Square & W/O Seheduler'])
    plt.xlabel('T')    
    plt.ylabel('FID')
    plt.title('Different iteration T FID Curve (t = 3)', loc='center')
    # plt.title('Optimizer = Adam', loc='right')
    plt.savefig('./curve.jpg')

    # plt.figure(figsize=(6,5))
    # # plt.plot(idx1, train_loss_wo_sheduler, label = 'no_t')    
    # # plt.plot(idx1, valid_loss_wo_sheduler, label = 'no_v')
    # plt.plot(idx1, train_loss_w_sheduler, label = 'yes_t')    
    # plt.plot(idx1, valid_loss_w_sheduler, label = 'yes_v')
    # plt.legend(['Train Loss', 'Valid Loss'])
    # plt.xlabel('Epoch')    
    # plt.ylabel('Loss')
    # plt.title('Transformer Loss Curve', loc='center')
    # # plt.title('Optimizer = Adam', loc='right')
    # plt.savefig('./curve.jpg')